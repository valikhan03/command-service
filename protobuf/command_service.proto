syntax = "proto3";

package protobuf;

option go_package = "/pb";

message Attempt_Requirements {
    int32 approve_required = 1;
    int32 enter_fee_required = 2;
    int64 enter_fee_amount = 3;
};

message Auction {
    string id = 1;
    string title = 2;
    string description = 3;
    int64 organizerID = 4;
    int32 max_participants = 5;
    int32 participants_number = 6;
    string starts_at = 7;
    string ends_at = 8;
    Attempt_Requirements Attempt_Requirements = 9;
    int32 type = 10;
};

message Lot{
    int32 id = 1;
    string auction_id = 2;
    string title = 3;
    string description = 4;
    int64 start_price = 5;
    string currency = 6;
    string category = 7;
    map<string, string> params = 8;
};


message MediaInfo {
    string user_id = 1;
    string auction_id = 2;
    int32 lot_id = 3;
    string media_type = 4;
    string media_name = 5;
};

message Response {
    string status = 1;
    int32 error_code = 2;
    string error = 3;
};


message CreateAuctionRequest{
    Auction auction = 1;
};

message UpdateAuctionRequest {
    Auction auction = 1;
};

message DeleteAuctionRequest {
    string id = 1;
};

message AddParticipantRequest {
    string auction_id = 1;
    int32 participant_id = 2;
};

message DeleteParticipantRequest {
    string auction_id = 1;
    int32 participant_id = 2;
};

message AddLotRequest {
    Lot lot = 1;
};

message UpdateLotRequest {
    Lot lot = 1;
};

message DeleteLotRequest {
    string auction_id = 1;
    string lot_id = 2;
};

message UploadMediaRequest {
    MediaInfo media_info = 1;
    bytes media_chunk = 2;
};


service CommandService{
    rpc CreateAuction (CreateAuctionRequest) returns (Response) {};
    rpc UpdateAuction (UpdateAuctionRequest) returns (Response) {};
    rpc DeleteAuction (DeleteAuctionRequest) returns (Response) {};
    rpc AddParticipant (AddParticipantRequest) returns (Response) {};
    rpc DeleteParticipant (DeleteParticipantRequest) returns (Response) {};
    rpc AddLot (AddLotRequest) returns (Response) {};
    rpc UpdateLot (UpdateLotRequest) returns (Response) {};
    rpc DeleteLot (DeleteLotRequest) returns (Response) {};
    rpc UploadMedia (stream UploadMediaRequest) returns (Response) {};
};